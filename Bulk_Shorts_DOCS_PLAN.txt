#INPUT
Please Define "INPUT"
i have changed the variable INPUT_MEDIA to "INPUT"

if input is audio [/content/video.mp3] (any format that ffmpeg support)
in case input is audio it will simply copy the input audio Create new folder with name "WorkSpace" in the Current Directory (if not exist)
Then with in cureent directory it will create another folder with same name as the input media file same (basename)
within Basenamed folder it will create another folder with name "temp" (if not exist)
and copy the audio file there. (if not exist)

if input is video [/content/video.mp4] (any format that ffmpeg support)
if processing input is in "video" format it will always convert the video into audio first.
Then this will Move the converted mp3 file into the "WorkSpace" folder (if not exist)
Within WorkSpace Folder create a New Folder with the same name as the "Input" (basename)media file name. (if not exist)
within Basenamed folder it will create One more Folder with Name "TEMP" (if not exist)
And move the Converted Audio File at that TEMP folder.

if input is youtube link [any type of link youtube short, ot youtube video, or youtube channel link, playlist link,]
in case of youtube single video link it will create a new folder at the same Directory with name "WorkSpace" if not exist)
within WorkSpace folder it will create another folder with name "Downloads" (if not exists)
then it will download the link media file in that folder.

if the downloaded media is single file Then it will create the new Folder with the same name of downloaded media file name(basename)
with in basenamed folder it will create another folder with name temp (if not exist)
the same name of downloaded file name. (if not exist)
then it will Convert downloaded media into mp3 first if it was a video,
i case if downloaded media id audio i will directoly move to the temp folder.

if downloaded media is a zip, rar file it will first unzip, unrar the file into same downloaded folder.
checks if videos or audio or both base in media files create banamed folder in workspace folder and in basename folder temp folder. after convting video into audio or direct move if its audio.

if its a youtube channel link then it will download all the files om to download folder first (if not already downloaded)
then it will process same as previously discribed

"if video convert into audio and move into basenamed folder within basenamed folder's temp folder keep on repeating the same until the last file is converted and moved!

if input is direct full path Example = [/content" or "/content/drive] (audio or video files  (any format that ffmpeg support) )
in case if its a local path folder with multiple video or audio files it will copy!!! not move! copy to Workspace folder basenamed folders's temp folder, if video then move the converted media if it audio then copy to temp.
will kepp on copy/moving until the last file! 

after the file is moved to the temp folder we wiil get the duration of audio file in Seconds.


This Whole Process Will be Called "Prepration"

-----------------------------------------------------------------------------------------------------------------------------------------------

Transcriptions"

Once the pre preparations done 
the next step will be transcribing the audio.
this process will get the prepard audio
name of "LANGUAGE" that was mentioned in "LANGUAGE variable. (if LANGUAGE is "English" it will procceed trancription process as input language "en" first 2 words of the language (english = English, Hindi  = hi, Urdu = ur, auto = atuo)
if LANGUAGE is set to "auto"  i will automatically detect the language in which the prepared file will be transcribed.
once the transcription process is completed  new files .txt .srt json files with same name of "prepared file will apear in the same folder.
once the srt, txt, csv, json files appear.
next step will be the adujesting the srt file according to the user requirements that was mentioned in the variablt "FONT_STYLE"
if FONT_STYLE veriable is "Word_Highlights" the process will Adujest the Subtitles .srt file according to the logic.
if FONT_STYLE veriable is "Scrolling" the process will Adujest the Subtitles .srt file according to the logic.
if FONT_STYLE veriable is "Word_to_Word" the process will Adujest the Subtitles .srt file according to the logic.
if Subtitles Style is not mentioned it will fall back to default subtitles style.

NOTE: 
you should add these adujestments accordingly i dont know much about time stamps or alingments of subtitles please write code with care and avoid any errors at this section of code.




---------------------------------------------------KEYWORDS------------------------------------------------------------------------------------

#Clip Titles (Keywords)
once subtitles are  adujested next step will be getting "Clip Titles"
this process requires theTranscription and pre made template.
"template will have instructions for "g4f/chatgpt/llm" to genrate Keywords (Clip_titles.
we will Send srt file and premade template with instructions to "chatgpt/g4f/llm to genrate relevent keywords based on the transcriptin using API CALL
in case if response from the response bot is not as expected
we will make another API call, and check the response, this time hopefully reponse will be similar as exprected,
alll if tries falis gto get response back in wrong format a message will be printed out.
if not we will retry calling the "reponse bot" max 5 times. "Failed to genrate keywords" we will retry after 1 minute.
Once we get Response Back from the "response_bot(g4f,chatgpt,llm)" as expected.



---------------------------------------------------Fatching------------------------------------------------------------------------------------

we will go for the next step which is fatching the relevent videos from the pexels, using PEXEL API.
We will get relevent videos from pexels by sending keyword and download videoss,
we will get videos one by one for each keyword while also ensuring the downloaded videos meet the required light of prepared file duration in seconds.
once all the videos downloaded to the temp folder.
we will trim and crop each video according to the duration mentioned within the template.
as well as ensuring the the "FORMAT" if mentioned "LANDSCAPE" we will only trim the length of video and do not crop the video. "if portrait then we will trim and crop all the video standard portait size (youtub if Squire then we will trim and crop standard instagram reels size(for youtube, youtube shorts, tiktoks, instagram reels,)




---------------------------------------------------Alingment------------------------------------------------------------------------------------



after that we will aling all the clips according to the sequence of Keywords, and transcrptions. to make the final video comes outin best eye catching sequence we will add transitions effects to the end of each video 
[5 transitions (left to right) 
(right to left) 
(up to down) 
(down to up) and a 
[BREAK_THRILL effect (video will thrill at the end of transition)] and turn it into 1 viddeo (alinged video) and save to the temp folder with name alinged video.]



---------------------------------------------------Combine------------------------------------------------------------------------------------


next we will combine the prepared audio, background music if provided, tiny sounds(with tiny sounds like click, below air, )  with alinged video and a new video will be formed in the temp folder with name "combined"
Tiny_Sound: these sounds can be found in the folder "Sound" ay Workspace Folder. these are small audio file that will be used transitions efect is taking place. we will add tiny sound that duration will be equal to the time of transition that takes place while moving 1 video clip to another clip.
Combined Video: Combined video will have Music if provided the (prepared audiofile, rendom transition efects, and tiny sounds)
next adding subtitles to the combined video.




---------------------------------------------------STYLING------------------------------------------------------------------------------------

in this step we will take the FONT mentioned in the "FONT_STYLE" variable from the folder can be found in Workspace Folder,
color of the font
size of the font
style of Subtitles.
and WATERMARK if mentioned in the "WATERMARK" variable and genrate the final video with (Basename) of INPUT.
Once the Final Video is genrated with basename and subtitles if required. 
if FONT_STYLE variable is empty we will skip this step and go for the next step which is metadata.
in this step we will make api call to response bot to genrate the Video title title, discriptions, and tags based on the theme of video and get response back by using Metadata Template with instructions and genrated transcriptions, (5 retry rule applis here as well)
Once it get the expected metadata response it will take the response create new file with name metadata within the same temp folder.
once the final video and metadata is genrated it will look for UPLOAD variable argument.


UPLOAD: 
if variavle is Upload only it will look for the file with name client_secrets.json file, upload_final_auth2.0.json file and upload the video to the youtube along with title, discriptions, and tags that was mentioned in metadata folder.
if upload is empty then it will skip the uploading process and move to the next step which is Moving the the final video, .srt file, .txt file, and metadata to the basenamed folder.
after moveing "basenamed_final.mp4  video, .srt file, .txt file and metadata from temp folder to basenamed folder
it will remove the temp folder will be permenently removed from the basenamed folder.
after removing the temp folder from the basenamed folder.
next step will be moveing the basenamed folder to the "OUTPUT" dir.


OUTPUT: the output has to be a folder path. if the output is not a folder path then it will prints please provid that valid output dir.
if OUTPUT is empty then it will skip the process or moving the basenamed folder. Print Task Completed..
this Complete process is called "CYCLE"
at the end of each cycle it will start processing the next file if INPUT was Local folder path with multiple media files (batch Processing.)
and it will keep on repeating the same cy mentioned in the "OUTPUT VARIABLE. 
we will Move The Alinged Video, Combined, Video, Fianl 




#MUSIC (optional)
Please Define "MUSIC"
i have changed the variable BG_MUSIC to "MUSIC"
if Music Variable is empty then it will ignore adding bg music in the final video else
if its a local path folder then it must pick any rendom "Audio/Video" file in case of MUSIC folder having videos it will convert into audio first and then process.
if its a direct file for example "/content/music_of_soul.mp3" it will use the provided file as BG in case of video it will convert into audio and then process.
if input is link then it will download audio/video and process in case of video it will convert it to audio and then process!

 
#FORMATE (optional)
i have Added new parameter with name "FORMAT" 
if format is "Landscape (Youtube 16:9]" then it will give final output video in landscape mode 
if portrait then it will give final video in "Portrait  (Tiktok 9:16)"
if portrait then the final video will be in standard instagram sequre size.
by default it will always give output in landscape mode

#LANGUAGE (optional)
Please Define "LANGUAGE"
if language is English then final command to process the input will be "en", 
similarly if Urdu the final command will be "ur" 
if Hindi then "hi"
and with all other languages.
by default the language will be "auto" for auto detctions.


#WATERMARK (optional)
Please Define "WATERMARK"
Ypu should adujest the code accordingly so it work with whatever the user watermark is
if "watermark is empty it will skip the process of adding watermark to the final video.

#FONT_STYLE (optional)
Please Define "FONT_STYLE"
Honestly currently the code works with only "Nimbus-Sans-Bold" i dont know how but i want you to adujest it according to my requirements that are given below:
the FONT_STYLE" parameter will require 5 argumes for example like this = "Nimbus-Sans-Bold, 24, White,Black Word_Highlight" 
Nimbus-Sans-Bold: is the name of Font that can be found at the folder "FONT" we will use the provided fonts with in the video subtitles
24: represents the size of subtitle in the final video,
"white,black" here white represents color of subtitles and black represnts strok color of subtitles. 
Word_Highlight: This represents the style of overall fonts. for example when this style is provided in the argument then it will work will word highlights this function work with active word. if someone is speaking in the video then when speaker sys "we" the word word we will be highlighted in the subtitles line then speaker next word is "are" the word "are will be highlighted in the subtitles, then speaker said "free" the word "free" will be highlighted in the subtitles. and so on and so for... you should write this function very very carefully!. with highligh color will be light blue and background of the highlight will circular not in squire shape. you have to adujest this function within "Transcription function! i mean after transcription of audio file it will adujest the srt file according to the arguments, 
also consider subtitles are adujested accordint to the format of video "landscape or portrait or squere. subtitle must be within the limit so that wthey do not cross the limit of visual video.
Simple: if input is Simple instead of "Word_Highlight" then it will not make any changes in the subtitles.
if FONT_STYLE is empty then it will not add any subtitles in the video and skip this process!


#UPLOAD (optional)
Please Define UPLOAD
if user has selected Upload Only. then i will only upload the video to youtube using its premade app at google cloud consol "youtube api v3"
if user has selected Upload & Scedual " then (it will first create a folder with name logs if not preesent, then within logs folder it will create a new creates a document file if not present there with name "Scedules" then it will check input if in is folder it will write the name of each file in list,
   each file name will start from a new line if not already written, then it will get the current time + 1 hour and writes the time there if not already written) then it wiill upload & scedules the first video to the video to youtube at specified time along with Title, discriptions and tags, 
process will ends here if input is single file) 
else it will write time + 24 hours to previous written time if not written
then it will take third file and add +hours to the previous writen if not and so on and so for.
if user input is other then "Upload Only or UPLOAD & SCEDUAL" then it will skip the process of uploading video to youtube.



#MetaData
Please Define "METADATA"
Once the Final video genrated i will Call ChatGPT again With Template Metadata" this will include Transcribed Script.
i will send transcription of the currently transcribed scrption and as chat gpt to genrate highly optmised titles and discriptions!
ONCE THE REPONSE GOT BACK AS EXPECTED IT WILL SAVE INTO THE FOLDER IN THE CURRENT FILE FOLDER WITH NAME METADATA!
PLEASE WRITE THE METADATA TEMPLATE ACCORDING TO THE LOGICS. 
and get response Back.

